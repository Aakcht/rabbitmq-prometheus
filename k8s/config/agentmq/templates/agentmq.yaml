apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "agentmq.fullname" . }}
  labels:
    app: {{ include "agentmq.name" . }} 
    chart: {{ include "agentmq.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ .Values.serviceName }}
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:
      app: {{ template "agentmq.name" . }}
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: {{ include "agentmq.name" . }} 
        chart: {{ include "agentmq.chart" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }} 
      terminationGracePeriodSeconds: 20
      initContainers:
      - name: sysctl-buddy
        image: alpine
        command:
        - /bin/sh
        - -c
        - |
          sysctl -w net.core.somaxconn=32768
          sysctl -w net.ipv4.ip_local_port_range='1024 65535'
        securityContext:
          privileged: true
      containers:
      - name: agentmq
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" }}
        volumeMounts:
          - name: config-volume
            mountPath: /etc/rabbitmq
          {{ if .Values.persistence.enabled }}
          - name: {{ include "agentmq.fullname" . }}-data
            mountPath: /var/lib/rabbitmq/mnesia
          {{ end }}
        ports:
{{ toYaml .Values.containerPorts | indent 8 -}}
        livenessProbe:
          exec:
            command: ["rabbitmq-diagnostics", "status"]
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 60
          failureThreshold: 10
        readinessProbe:
          exec:
            command: ["rabbitmq-diagnostics", "status"]
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 60
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: K8S_SERVICE_NAME
            value: "{{ template "agentmq.fullname" . }}-headless"
          - name: RABBITMQ_NODENAME
            value: "rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
          {{ with .Values.erlangProcesses -}}
          - name: RABBITMQ_MAX_NUMBER_OF_PROCESSES
            value: {{ . | quote }}
          {{- end }}
          - name: RABBITMQ_ERLANG_COOKIE
            valueFrom:
              secretKeyRef:
                name: "agentmq-{{ .Values.global.environmentSuffix }}"
                key:  "erlang-cookie"
        resources:
{{ toYaml .Values.resources | indent 12 }}
   {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "agentmq.fullname" . }}-config
            items:
            - key: rabbitmq.conf
              path: rabbitmq.conf
            - key: enabled_plugins
              path: enabled_plugins
            - key: advanced.config 
              path: advanced.config
            - key: definitions.json
              path: definitions.json
{{ if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "agentmq.fullname" . }}-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources :
        requests:
          storage: {{ .Values.persistence.storage }} 
      storageClassName: {{ .Values.persistence.storageClass | default "gp2" | quote }}
{{ end }}

