apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "agentmq.fullname" . }}-config
data:
  enabled_plugins: |
      [rabbitmq_management,rabbitmq_prometheus,rabbitmq_peer_discovery_k8s,rabbitmq_event_exchange,rabbitmq_web_stomp].

  rabbitmq.conf: |
      ## Clustering
      cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
      cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
      cluster_formation.k8s.address_type = hostname
      cluster_formation.k8s.hostname_suffix = .{{ .Values.serviceName }}.default.svc.cluster.local
      cluster_formation.node_cleanup.interval = 30
      # Set to false if automatic removal of unknown/absent nodes
      # is desired. This can be dangerous, see
      #  * http://www.rabbitmq.com/cluster-formation.html#node-health-checks-and-cleanup
      #  * https://groups.google.com/forum/#!msg/rabbitmq-users/wuOfzEywHXo/k8z_HWIkBgAJ
      cluster_formation.node_cleanup.only_log_warning = true
      cluster_partition_handling = autoheal
      ## queue master locator 
      queue_master_locator=min-masters
      ## See http://www.rabbitmq.com/access-control.html#loopback-users
      loopback_users.guest = false
      vm_memory_high_watermark.relative = 0.5
      background_gc_enabled = true
      background_gc_target_interval = 30000
      # Delete unused agent persistent queues after 14 days.
      log.file = false
      log.console = true
      log.console.level = info
      # https://github.com/rabbitmq/rabbitmq-prometheus/pull/28
      # prometheus.enable_metric_aggregation = true


  advanced.config: |
      [
        {mnesia, [{dump_log_write_threshold, 500}]},
        {rabbit, [
          {tcp_listeners, [{"0.0.0.0", 5672}]},
          {collect_statistics_interval, 60000},
          {tcp_listen_options, [
                                {backlog,       4096},
                                {nodelay,       true},
                                {linger,        {true,0}},
                                {exit_on_close, false},
                                {buffer,        4096},
                                {sndbuf,        32768},
                                {recbuf,        32768}
                               ]}
        ]},
        {rabbitmq_web_stomp, [
            {ws_path, "/stomp"},
            {proxy_protocol, {{ default false .Values.proxyProtocol }}},
            {num_tcp_acceptors, 10},
            {max_connections, infinity},
            {cowboy_opts, []},
            {tcp_config, [
                {backlog,         4096},
                {exit_on_close,   false},
                {buffer,          2048},
                {linger,          {true,0}},
                {sndbuf,          32768},
                {recbuf,          32768},
                {nodelay,         true}
            ]}
        ]},
        {rabbitmq_stomp, [
          {num_tcp_acceptors, 10},
          {tcp_listen_options, [
              {backlog,       4096},
              {nodelay,       true},
              {exit_on_close, false},
              {linger,        {true,0}},
              {buffer,        2048},
              {sndbuf,        32768},
              {recbuf,        32768}
          ]}
        ]},
        {rabbitmq_management, [
          {load_definitions, "/etc/rabbitmq/definitions.json"}
       ]}

      ].

  definitions.json: |
    {
    "bindings": [],
    "exchanges": [],
    "global_parameters": [],
    "parameters": [],
    "permissions": [
          {
            "user": "guest",
            "vhost": "/",
            "configure": ".*",
            "write": ".*",
            "read": ".*"
          }
    ],
    "policies": [],
    "queues": [
        {
            "arguments": {},
            "auto_delete": false,
            "durable": true,
            "name": "agents-resp",
            "vhost": "/"
        }
    ],
    "rabbit_version": "3.8.2",
    "topic_permissions": [],
    "users": {{ toJson .Values.rabbitmqUsers }},
    "vhosts": [
        { "name": "/" }]
    }
